FigureYa161stemness
FigureYa161stemness
Date：2025-5-20
Author：Yi Xiong
Reviewer：Ying Ge、Junyi Shen
需求描述Description of requirements
用GEO数据计算mRNAsi、mDNAsi，画图。mRNAsi and mDNAsi were calculated using GEO data and plotted.
出自From
https://febs.onlinelibrary.wiley.com/doi/abs/10.1002/1878-0261.12557
Fig. 1. Clinical and molecular features associated with the mRNA expression-based stemness index (mRNAsi) and the mDNAsi in MB. (A) An overview of the association between known clinical and molecular features (histology, subgroup, gender, and metastatic status) and mRNAsi in MB. Columns represent samples sorted by mRNAsi from low to high (top row). Rows represent known clinical and molecular features. (B) An overview of the association between known clinical and molecular features (histology, subgroup, gender, and metastatic status) and mDNAsi in MB. Columns represent samples sorted by mDNAsi from low to high (top row). Rows represent known clinical and molecular features.
The work flow to generate the stemness indices (mRNAsi and mDNAsi) is available on
https://bioinformaticsfmrp.github.io/PanCanStem_Web/
. 或
http://tcgabiolinks.fmrp.usp.br/PanCanStem/
应用场景Application scenarios
用于计算肿瘤基因表达以及DNA甲基化的干性指数，跟临床信息一起展示。It is used to calculate the dryness index of tumor gene expression and DNA methylation, and is displayed together with clinical information
另外，Fig. 6的分析画图可参考FigureYa131CMap。其余可参考文章作者分享的代码In addition, the analysis drawing in Fig. 6 can be found in FigureYa131CMap. For the rest, you can refer to the code shared by the author of the article：
https://github.com/richie2019/MBpanel
环境设置Environment settings
使用国内镜像安装包Use the domestic mirror installation package
options("repos"= c(CRAN="https://mirrors.tuna.tsinghua.edu.cn/CRAN/"))
options(BioC_mirror="http://mirrors.ustc.edu.cn/bioc/")
加载包Load the package
library(GEOquery)
library(dplyr)
library(limma)
library(ComplexHeatmap)
library(RColorBrewer)
library(clusterProfiler)
library(tibble)
library(ggplot2)
library(cowplot)
Sys.setenv(LANGUAGE = "en") #显示英文报错信息Displays the error message in English
options(stringsAsFactors = FALSE) #禁止chr转成factor   Prohibiting CHR from converting to factor
用到的两个文件The two files used：pcbc-stemsig.tsv和pcbc-stemsig.p219.Rda，来自From
https://www.cell.com/cell/fulltext/S0092-8674(18)30358-1
，跑自己的数据就用这个作为输入跑就行了。Just use this as input to run your own data
mRNAsi
输入文件Enter the file
需要表达数据和临床信息作为输入Expression data and clinical information are required as inputs：
GSE85217_family.soft.gz，表达数据Express data。Download required data and read data. We directly download files from
https://ftp.ncbi.nlm.nih.gov/geo/series/GSE85nnn/GSE85217/soft/GSE85217_family.soft.gz
easyinput_clinicaldata.csv，临床信息Clinical information。
GSE文件已上传到微云，下载链接GSE文件已上传到微云，下载链接GSE file has been uploaded to Microcloud, download link GSE file has been uploaded to Microcloud, download link：
https://share.weiyun.com/5X52f08
gse <- getGEO(filename='GSE85217_family.soft.gz')
数据预处理Data preprocessing
names(GSMList(gse))[1:5] # sample names
# we have only one platform

## Acquire expression set
gsmlist = Filter(function(gse) {Meta(gse)$platform_id=='GPL22286'},GSMList(gse))
Table(gsmlist[[1]])[1:5,]
probesets <- Table(GPLList(gse)[[1]])$ID
data.matrix <- do.call('cbind',lapply(gsmlist,function(x) 
{tab <- Table(x)
mymatch <- match(probesets,tab$ID_REF)
return(tab$VALUE[mymatch])
}))
data.matrix <- apply(data.matrix,2,function(x) {as.numeric(as.character(x))})
data.matrix[1:5,1:5]
rownames(data.matrix) <- probesets
colnames(data.matrix) <- names(gsmlist)
data.matrix[1:5,1:5]
GPL_anno <-  Table(GPLList(gse)[[1]])
head(GPL_anno)
# we used Entrez ID here
exprSet <- data.matrix
rownames(exprSet) <- GPL_anno$SPOT_ID
exprSet[1:5,1:5]
boxplot(exprSet, main="MB_mRNA_boxplot_pre")
exprSet_processed <- as.data.frame(exprSet_processed)
exprSet_processed <- exprSet_processed %>% 
  rownames_to_column(var="ENSEMBL") %>% 
  inner_join(idmap,by="ENSEMBL") %>% 
  dplyr::select(-ENSEMBL) %>% 
  dplyr::select(SYMBOL,everything()) %>%
  dplyr::mutate(rowMean =rowMeans(.[grep("MB_", names(.))])) %>% 
  dplyr::filter(SYMBOL != "NA") %>% 
  dplyr::arrange(desc(rowMean)) %>% 
  dplyr::distinct(SYMBOL,.keep_all = T) %>% 
  dplyr::select(-rowMean) %>% 
  column_to_rownames(var = "SYMBOL")
exprSet_processed[1:5,1:5]
Calculate RNA stemness
fnSig <- "pcbc-stemsig.tsv" 
w <- read.delim(fnSig, header = FALSE, row.names = 1 ) %>% as.matrix() %>% drop()
w[1:10]
#
X <- exprSet_processed %>%
  rownames_to_column(var="gene_id") %>%
  filter( gene_id %in% names(w) ) %>%
  column_to_rownames( "gene_id" ) %>% as.matrix()

# Reduce the signature to the common set of genes.
stopifnot( all( rownames(X) %in% names(w)))
w <- w[ rownames(X) ]
w[1:5]
# Score the Matrix `X` using Spearman correlation. 
s <- apply( X, 2, function(z) {cor( z, w, method="sp", use="complete.obs" )} )
s[1:5]
# Scale the scores to be between 0 and 1
s <- s - min(s)
s <- s / max(s)
s[1:5]
# Then output scores to a file mRNA_StemScore.tsv.
write.table( cbind(s), file="MB_mRNA_StemScore.tsv", sep="\t", quote=FALSE, col.names=FALSE )

ss <- data.frame(Sample.ID = names(s), mRNAsi = s)
input <- clic %>% left_join(ss, by = c("Sample.ID"))
input <- input[order(input$mRNAsi),]
save(input,file = "RNAinput.Rdata")
Visualization
load("RNAinput.Rdata")

input <- as.matrix(input)
input[is.na(input)] <- "Unknown"
input <- as.data.frame(input)
input$mRNAsi <- as.numeric(input$mRNAsi)
input$Histology <- factor(input$Histology,levels = c("Classic","Desmoplastic","LCA","MBEN","Unknown"))
input$Subgroup <- factor(input$Subgroup,levels = c("Group3","Group4","SHH","WNT"))
input$Gender <- factor(input$Gender,levels = c("F","M","Unknown"))
input$MetStatus <- factor(input$MetStatus,levels = c("Metastatic","Non-metastatic","Unknown"))
input$index <- 1:nrow(input)

# 画图Drawing
darkred   <- "#F2042C"
blue      <- "#0A0745"
lightgrey <- "#dcddde"
# 自定义主题Custom themes
My_Theme1 <- theme_bw() + 
  theme(panel.grid =element_blank()) + 
  theme(panel.border = element_rect(size = 1)) + 
  theme(legend.position="none") +
  theme(axis.title.x=element_blank(),
        axis.title.y=element_text(size = 12,angle = 90),
        axis.text.x = element_blank(),
        axis.ticks.x = element_blank()
        )+
    theme(plot.margin = margin(0,0.1,0,0.1, "cm"))
    
My_Theme2 = theme_minimal()+
  theme(legend.position="none") +
  theme(axis.title.x=element_blank(),
        axis.title.y=element_text(size = 12,angle = 0),
        axis.text = element_blank(),
        axis.ticks = element_blank())+
  theme (panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
  theme(plot.margin = margin(0,0.1,0,0.1, "cm"))

p1 <- ggplot(input, aes(index, mRNAsi))+
  geom_bar(stat="identity",col = blue)+
  My_Theme1 +
  labs(y = "mRNAsi") +
  scale_x_continuous(expand = c(0,0)) #不留空There is no space

p2 <- ggplot(input,aes(index,1))+
  geom_tile(aes(fill = Histology))+
  My_Theme2+
  labs(y = "Histology")+
  scale_fill_manual(values = c("#74C065","#B096C2","#FAA96C","#EFF882","#6D6466")) +
  scale_x_continuous(expand = c(0,0)) #不留空There is no space

p3 <- ggplot(input,aes(index,1))+
  geom_tile(aes(fill = Subgroup))+
  My_Theme2+
  labs(y = "Subgroup")+
  scale_fill_manual(values = c("#84CBA8","#F2FA9C","#B1A5C8","#FA5E5C")) +
  scale_x_continuous(expand = c(0,0)) #不留空There is no space

p4 <- ggplot(input,aes(index,1))+
  geom_tile(aes(fill = Gender))+
  My_Theme2+
  labs(y = "Gender")+
  scale_fill_manual(values=c("#E00F0A","#3D6197","#6D6466")) +
  scale_x_continuous(expand = c(0,0)) #不留空  There is no space

p5 <- ggplot(input,aes(index,1))+
  geom_tile(aes(fill = MetStatus))+
  My_Theme2 +
  labs(y = "MetStatus")+
  scale_fill_manual(values=c("#64B685","#FC6D4C","#6D6466")) +
  scale_x_continuous(expand = c(0,0)) #不留空There is no space

legend_a <- get_legend(p2+theme(legend.position = "bottom"))
legend_b <- get_legend(p3+theme(legend.position = "bottom"))
legend_c <- get_legend(p4+theme(legend.position = "bottom"))
legend_d <- get_legend(p5+theme(legend.position = "bottom"))
p <- plot_grid(p1,p2,p3,p4,p5,
               align = "v",axis = "l",
               ncol = 1, rel_heights = c(4,1,1,1,1),
               legend_a,legend_b,legend_c,legend_d)
p
save_plot("mRNAsi.pdf", p,base_width = 10,base_height = 8)
mDNAsi
输入文件Enter the file
GSE文件已上传到微云，下载链接The GSE file has been uploaded to Microcloud, download link：
https://share.weiyun.com/5X52f08
exprSet <- data.table::fread("GSE85212_Methylation_763samples_SubtypeStudy_TaylorLab_beta_values.txt.gz")
exprSet[1:5,1:5]
exprSet <- exprSet %>% tibble::column_to_rownames(var = "V1")

clic <- read.csv("easyinput_clinicaldata.csv")
names(clic)[1] <- "Sample.ID"
Calculate DNA stemness
testset <- exprSet
(load("pcbc-stemsig.p219.Rda"))
w <- mm$w
w[1:5]
w <- w[names(w) %in% rownames(testset)]
X <- testset[as.character(names(w)),]
X <- as.matrix(X)
X[1:5, 1:5]
ss <- t(w) %*% X
ss[1,1:3]
save(ss, file = "MB_mDNAsi.Rda")
Visualization
ss <- data.frame(Sample.ID = rownames(ss), mDNAsi = ss$mDNAsi)
input <- clic %>% left_join(ss, by = c("Sample.ID"))
input <- input[order(input$mDNAsi),]
save(input,file = "DNAinput.Rdata")
画图Drawing
load(file = "DNAinput.Rdata")

input <- as.matrix(input)
input[is.na(input)] <- "Unknown"
input <- as.data.frame(input)
input$mDNAsi <- as.numeric(input$mDNAsi)
input$Histology <- factor(input$Histology,levels = c("Classic","Desmoplastic","LCA","MBEN","Unknown"))
input$Subgroup <- factor(input$Subgroup,levels = c("Group3","Group4","SHH","WNT"))
input$Gender <- factor(input$Gender,levels = c("F","M","Unknown"))
input$MetStatus <- factor(input$MetStatus,levels = c(" 1"," 0","Unknown"),labels = c("Metastatic","Non−metastatic","Unknown"))
input$index <- 1:nrow(input)

# 画图Drawing
darkred   <- "#F2042C"
blue      <- "#0A0745"
lightgrey <- "#dcddde"

My_Theme1 <- theme_bw() + 
  theme(panel.grid =element_blank()) + 
  theme(panel.border = element_rect(size = 1)) + 
  theme(legend.position="none") +
  theme(axis.title.x=element_blank(),
        axis.title.y=element_text(size = 12,angle = 90),
        axis.text.x = element_blank(),
        axis.ticks.x = element_blank()
        )+
    theme(plot.margin = margin(0,0.1,0,0.1, "cm"))

My_Theme2 = theme_minimal()+
  theme(legend.position="none") +
  theme(axis.title.x=element_blank(),
        axis.title.y=element_text(size = 12,angle = 0),
        axis.text = element_blank(),
        axis.ticks = element_blank())+
  theme (panel.grid.major = element_blank(), panel.grid.minor = element_blank())+
  theme(plot.margin = margin(0,0.1,0,0.1, "cm")) 

p1 <- ggplot(input,aes(index,mDNAsi))+
  geom_bar(stat="identity",col = blue)+
  My_Theme1+
  labs(y = "mDNAsi")+
  scale_x_continuous(expand = c(0,0)) #不留空There is no space

p2 <- ggplot(input,aes(index,1))+
  geom_tile(aes(fill = Histology))+
  My_Theme2+
  labs(y = "Histology")+
  scale_fill_manual(values=c("#74C065","#B096C2","#FAA96C","#EFF882","#6D6466"))+
  scale_x_continuous(expand = c(0,0)) #不留空There is no space

p3 <- ggplot(input,aes(index,1))+
  geom_tile(aes(fill = Subgroup))+
  My_Theme2+labs(y = "Subgroup")+
  scale_fill_manual(values=c("#84CBA8","#F2FA9C","#B1A5C8","#FA5E5C"))+
  scale_x_continuous(expand = c(0,0)) #不留空There is no space

p4 <- ggplot(input,aes(index,1))+
  geom_tile(aes(fill = Gender))+
  My_Theme2+labs(y = "Gender")+
  scale_fill_manual(values=c("#E00F0A","#3D6197","#6D6466")) +
  scale_x_continuous(expand = c(0,0)) #不留空 There is no space

p5 <- ggplot(input,aes(index,1))+
  geom_tile(aes(fill = MetStatus))+
  My_Theme2+labs(y = "MetStatus")+
  scale_fill_manual(values=c("#64B685","#FC6D4C","#6D6466")) +
  scale_x_continuous(expand = c(0,0)) #不留空There is no space

legend_a <- get_legend(p2+theme(legend.position = "bottom"))
legend_b <- get_legend(p3+theme(legend.position = "bottom"))
legend_c <- get_legend(p4+theme(legend.position = "bottom"))
legend_d <- get_legend(p5+theme(legend.position = "bottom"))
p <- plot_grid(p1,p2,p3,p4,p5,align = "v",axis = "l",ncol = 1, rel_heights = c(4,1,1,1,1),legend_a,legend_b,legend_c,legend_d)
p
save_plot("mDNAsi.pdf", p,base_width = 10,base_height = 8)
Session Info
sessionInfo()