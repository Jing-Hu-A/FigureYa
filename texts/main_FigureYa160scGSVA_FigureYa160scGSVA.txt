FigureYa160scGSVA
FigureYa160scGSVA
Date:2025-5-20
Author：Jinen Song
Reviewer：Ying Ge、Junyi Shen
需求描述Description of requirements
对单细胞亚群进行功能注释后，如何求每群细胞某条pathway的gene set score  
After functional annotation of single cell subsets, how to find the gene set score of a certain pathway in each cell group
出自From
https://www.ahajournals.org/doi/10.1161/CIRCULATIONAHA.118.038362
Figure 5. Pathway analysis of endothelial cell (EC) subpopulations. B, Functional gene sets identified from Reactome pathway enrichment and subpopulation markers differentiate the 2 major EC populations EC 1 and EC 2.
应用场景Application scenarios
单细胞数据，从matrix到分组，用GSVA计算pathway的表达量，然后比较pathway在组间的差异，画图。Single-cell data, from matrix to grouping, the expression of pathways was calculated using GSVA, and then the differences in pathways between groups were compared and plotted.
环境设置Environment settings
使用国内镜像安装包Use the domestic mirror installation package
options("repos"= c(CRAN="https://mirrors.tuna.tsinghua.edu.cn/CRAN/"))
options(BioC_mirror="http://mirrors.ustc.edu.cn/bioc/")
加载包Load the package
library(dplyr)
library(Seurat)
library(ComplexHeatmap)
library(GSVA)
library(GSEABase)
library(limma)
library(ggplot2)
Sys.setenv(LANGUAGE = "en") #显示英文报错信息Displays the error message in English
options(stringsAsFactors = FALSE) #禁止chr转成factor    Prohibiting CHR from converting to factor
加载自定义函数Load custom functions
做单细胞分析时，代码会非常多而且繁杂，为了脚本的整洁简短，我们把这些函数单独放在一个文件里，使用时导入就可以了When doing single-cell analysis, the code will be very much and complicated, for the sake of the script to be clean and short, we put these functions in a separate file and import them when using。
source("seurat_pipeline.R")
输入文件Enter the file
输入文件位于文件夹The input file is located in the folder：pbmc3k_filtered_gene_bc_matrices/filtered_gene_bc_matrices/hg19/，包括include raw gene expression matrix、barcode和gene annotation。
数据来源Data sources：
https://s3-us-west-2.amazonaws.com/10x.files/samples/cell/pbmc3k/pbmc3k_filtered_gene_bc_matrices.tar.gz
pbmc.data <- Read10X(data.dir = "pbmc3k_filtered_gene_bc_matrices/filtered_gene_bc_matrices/hg19/")
# Initialize the Seurat object with the raw (non-normalized data).
pbmc <- CreateSeuratObject(counts = pbmc.data, project = "pbmc3k", min.cells = 3, min.features = 200)
pbmc
主要步骤Main steps：
STEP 1 : 对单细胞数据进行分组，获得分组信息Group single-cell data to obtain grouping information
STEP 2 : 进行GSVA分析、差异表达分析GSVA analysis and differential expression analysis were performed
STEP 3 : 根据已经得到的分组信息，挑选感兴趣的通路，画图According to the grouping information that has been obtained, select the pathway of interest and draw a picture
STEP 1: 对单细胞数据进行分组，获得分组信息Grouping single-cell data to obtain grouping information
用于从raw gene expression matrix开始。Used to start with the raw gene expression matrix
如果已经完成了聚类，请移动到STEP 2。If clustering is already done, move to STEP 2
使用seurat分析单细胞数据需要注意的几个地方There are a few things to look out for when analyzing single-cell data with seurat:
1. 数据过滤Data filtering
细胞内表达基因个数 <200 或 > 7500的过滤掉。这里过滤的上限和下限自己把控，没有固定值。过滤掉基因表达高的是为了减少多细胞比例The number of genes expressed in the cell is <200 or > 7500 filtered out. The upper and lower limits of filtering here are controlled by yourself, and there is no fixed value. Filtering out genes with high expression is to reduce the proportion of multicellulars
在 <3 个细胞内有表达的基因，过滤掉。因为很多基因的表达值都是0，这种可以过滤掉很多表达全为0的基因3 genes expressed in the cell are filtered out. Because the expression value of many genes is 0, this can filter out many genes with all expression of 0
线粒体基因比例，一定程度上代表这建库时细胞的完整性。如果线粒体基因比例太高，说明细胞非常有可能破损了，在油包水时就不完整了The proportion of mitochondrial genes represents the integrity of the cell at the time of bank construction to a certain extent. If the proportion of mitochondrial genes is too high, it means that the cell is very likely to be damaged and is incomplete when it is water in oil
MT genes% < 20% 左右，根据自己的数据把控。就算这里过滤的不严格，也没有关系，后面聚类时，这些高线粒体基因比例的细胞都会聚到一类。About 20%, control according to your own data. Even if the filtering here is not strict, it doesn't matter, when clustering later, these cells with a high proportion of mitochondrial genes will be clustered into one category.
后续分析时排除这些细胞就可以了。一般外周血数据中线粒体基因比例都很低。It is sufficient to exclude these cells during subsequent analysis. The proportion of mitochondrial genes in peripheral blood data is generally low
2 聚类和降维可视化Clustering and dimensionality reduction visualization
这里有两个参数不好把控，一个是选择PCA结果中的PC个数，另一个就是resolution。There are two parameters that are not easy to control, one is to select the number of PCs in the PCA result, and the other is resolution.
PC个数选择，可以根据ElbowPlot(拐点图)，选择拐点出现位置附近的PC数即可。这个参数会影响聚类的结果已经后续降维图形的。The number of PCs can be selected according to ElbowPlot. This parameter will affect the results of clustering that have been subsequently reduced in dimensionality.
resolution：这个参数相对的不那么重要，只是会影响分出的cluster的数目多少。当resolution选的比较大，cluster分的很多，后续分析也可以This parameter is relatively less important, but it will affect the number of clusters that are segregated. When the resolution is relatively large, the cluster score is large, and the subsequent analysis is also acceptable
根据marker genes等，对细胞类型进行定义，然后人为的把相同细胞类型的cluster合并。Cell types are defined according to marker genes, etc., and then clusters of the same cell type are artificially merged
一般细胞数目 5000 - 10000 左右时，选择 resolution = 1 都是可以的，细胞数量更多时可以选择2。自己根据分出的效果来调控，这个不影响大局。Generally, when the number of cells is around 5000 - 10000, it is okay to choose resolution = 1, and 2 can be selected when the number of cells is larger. It is regulated according to the effect of the division, which does not affect the overall situation.
用自定义函数Use custom functions
Seurat.pipeline
做预处理Do pretreatment
整个过程中需要调整的就只有这几个参数了These are the only parameters that need to be adjusted in the whole process：
Seurat.pipeline(RdsName = pbmc, outputname = "PBMC", MTfraction = 0.05, pc = 10, res = 0.6)
# 这里需要运行几分钟It takes a few minutes to run here
# 经过这一步的处理，现在在pbmc这个seurat object 的assays中存储了三种基因表达数据，保存在PBMC_pc10_res0.6.rds里
After this step of processing, three gene expression data are now stored in the assays of the PBMC seurat object, which are stored in PBMC_pc10_res0.6.rds
# (1) pbmc@assays$RNA@counts : raw count
# (2) pbmc@assays$RNA@data : Normalized data
# (3) pbmc@assays$RNA@scale.data: scaled之后的data
# 做GSVA分析时，使用normalized data就可以了.When doing GSVA analysis, you can use normalized data
提取出每个细胞的基因表达量和对应的分组信息。The gene expression amount and corresponding grouping information of each cell were extracted.
查看生成的
PBMC_pc10_res0.6.pdf
文件，分成了9个cluster
Look at the generated
PBMC_pc10_res0.6.pdf
file, which is divided into 9 clusters
如何鉴定每个cluster是什么细胞类型？经典的做法是找出每个cluster中的高表达的基因，然后根据经典的细胞marker来确定细胞类型，需要查找文献。方法见官网How to identify what cell type each cluster is? The classical approach is to identify the highly expressed genes in each cluster and then determine the cell type based on the classical cell marker, which requires a search of literature. See the official website for the method
https://satijalab.org/seurat/v3.1/pbmc3k_tutorial.html
STEP 2 : GSVA 分析和差异表达分析analysis and differential expression analysis
选择感兴趣的两个细胞亚群（cluster），用GSVA算出pathway的表达量，然后对比，画出感兴趣的pathway的图。Select the two cell subpopulations (clusters) of interest, use GSVA to calculate the expression amount of the pathway, and then compare and draw a map of the pathway of interest.
# 加载 STEP 1 获得的pbmc  Load the PBMC obtained in STEP 1
pbmc <- readRDS("PBMC_pc10_res0.6.rds")

# 导入gmt文件，这里以MsigDB中的Hallmark为例 Import gmt file, here is an example of Hallmark in MsigDB
# MsigDB链接link(https://www.gsea-msigdb.org/gsea/msigdb/)
# 下载文件时，注意选择对应的gene格式吗，一般10X的结果，都是gene symbol格式的。When downloading the file, pay attention to whether to choose the corresponding gene format, generally 10X results, are in gene symbol format
genesets <- getGmt("h.all.v7.0.symbols.gmt")

### 1. 找到感兴趣的细胞组别，两者间进行比较Find the cell group of interest and compare it between the two
# 这里以cluster6和cluster8为例Here are cluster6 and cluster8 as examples
subcluster = c(6, 8)
sub <- subset(pbmc, idents = subcluster)
df.data <- GetAssayData(object = sub, slot = "data")

# 将细胞所属的group信息保存起来Save the group information to which the cell belongs
df.group <- data.frame(umi = names(Idents(sub)), 
                       cluster = as.character(sub@meta.data$RNA_snn_res.0.6), 
                       stringsAsFactors = F)
# 查看一下结果是什么样子的See what the results look like
head(df.group)
# 因为单细胞数据中有很多基因表达值为0，所以会出现红色的warning信息，没有关系。Because there are many genes with 0 expression values in single-cell data, a red warning message will appear, which is okay.

# 查看一下结果Check out the results
gsvascore[1:5, 1:5]
# 先用热图展示一下hallmarker中全部的50个geneset得到的结果Let's start with a heatmap showing the results of all 50 genesets in Hallmarker
ha.t <- HeatmapAnnotation(Cluster = df.group$cluster)
Heatmap(as.matrix(gsvascore), 
        show_column_names = F, 
        cluster_rows = T, 
        cluster_columns = T, 
        top_annotation = ha.t, 
        column_split = df.group$cluster, 
        row_names_gp = gpar(fontsize = 8), 
        row_names_max_width = max_text_width(rownames(gsvascore), 
                                             gp = gpar(fontsize = 8)))
STEP 3：根据已经得到的分组信息，挑选出需要的通路，画图Select the required channel drawing according to the grouping information that has been obtained
从sigPathways中挑选一个gene set来展示例图的画法。你也可以写成循环，画多个。Select a gene set from sigPathways to show how to draw an example diagram. You can also write as a loop and draw multiple times.
# 这里选第一个pathway画图Here is the first pathway to draw
count <- gsvascore[rownames(sigPathways)[1], , drop = FALSE]
count <- as.data.frame(t(count))
colnames(count) <- "geneset"
count$cluster <- as.character(Idents(sub))
# 用通路的名称作为图形标题Use the name of the pathway as the graphic title
title.name = rownames(sigPathways)[1]

# 添加P值Add a P-value
# 得到cluster6和cluster10中的gsva score 最大值The maximum GSVA score in cluster6 and cluster10 is obtained
count.geneset.group1 <- count$geneset[count$cluster == subcluster[1]]
count.geneset.group2 <- count$geneset[count$cluster == subcluster[2]]

# 确定P值添加的位置Determine where the P-value is added
ysegment1 <- max(count.geneset.group1)
ysegment2 <- max(count.geneset.group2)
ysegment.max <- max(ysegment1, ysegment2)

# 根据P值确定加几颗星Add a few stars according to the P value
pval <- sigPathways$P.Value[1]

if (pval < 0.001) {
  pval.label = "***"
} else if (pval < 0.005) {
  pval.label = "**"
} else if (pval < 0.05) {
  pval.laben = "*"
} else if (pval >= 0.05) {
  pval.label = "non.sig"
}

# 自定义颜色Custom colors
blue <- "#619CD6"
green <- "#89C32E"
p <- ggplot(count, aes(x = cluster, y = geneset, fill = cluster)) +
  geom_violin() +
  scale_fill_manual(values = c(blue, green)) + # 用自定义颜色填充Fill with custom colors
  theme_classic() +
  theme(panel.grid = element_blank(), 
        plot.margin = margin(0.5, 0.5, 0.5, 0.5, "cm"), 
        axis.title.x = element_text(color = "black", size = 20), 
        axis.title.y = element_blank(), 
        axis.text = element_text(color = "black", size = 16), 
        axis.line = element_line(colour = "black", size = 0.6), 
        plot.title = element_text(size = 20, hjust = 0.5)) + 
  # 添加图形标题Add graphic titles
  ggtitle(title.name) +
  guides(fill = F)
p
# 前面已经得到了pvalue,添加上去就可以了You have already got the pvalue before, just add it
p + 
  # 图形中的一个横线和两个竖线One horizontal line and two vertical lines in the graph
  annotate("segment", x = 1, xend = 2, y = ysegment.max + 0.02, yend = ysegment.max + 0.02) + 
  annotate("segment", x = 1, xend = 1, y = ysegment1 + 0.01, yend = ysegment.max + 0.02) +
  annotate("segment", x = 2, xend = 2, y = ysegment2 + 0.01, yend = ysegment.max + 0.02) +
  # 添加P值对应的星号Add an asterisk corresponding to the P value
  annotate("text", 
           size = 12, # *的大小The size of the
           x = 1.5, 
           y = ysegment.max - 0.03, #可以微调*所在的位置The position of the * can be fine-tuned
           label = pval.label)
ggsave("PBMC_DE_genesets_hallmarker_cluster6_vs_8.pdf", width = 5.5, height = 5)
Session Info
sessionInfo()