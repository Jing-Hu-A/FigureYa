FigureYa152DouleCorPlot
FigureYa152DouleCorPlot
2025-5-20
需求描述
复现原文这种两组画一起的相关性图。
Requirement Description
Reproduce the original text's correlation graph with two groups drawn together.
出自
https://www.sciencedirect.com/science/article/abs/pii/S0168827819301898
Fig. 3. Microenvironmental immune cell profiling of HCC-IS and C-HCC. (A) Estimated absolute scores for each immune cell type by CIBERSORT and PD1-TIL, PDL1-TIL, and PDL1-Tumor immunostaining in C-HCC and HCC-IS.
图的解读
右上角展示C-HCC里各种免疫细胞之间的相关性，左下角展示HCC-IS里各种免疫细胞之间的相关性。
Figure legend没写清楚，按图推测：
泡泡大小代表相关系数r
泡泡颜色代表相关系数r
p value > 0.05时不画泡泡
应用场景
在做相关多个基因（或免疫细胞，或样本）之间相关分析时，如果有两个不同来源的数据，通常需要各画一个图，其实可以画在一个图上。
适用于
横纵坐标一致
的相关性结果展示，因为这种相关性矩阵可以画成三角形（左下跟右上是一样的）。如果
横纵坐标不一致
，需要画成矩形，计算和画法可参考FigureYa97correlation。如果要同时展示两组，可参考FigureYa144DiagHeatmap的画法。
From
https://www.sciencedirect.com/science/article/abs/pii/S0168827819301898
Fig. 3. Microenvironmental immune cell profiling of HCC-IS and C-HCC. (A) Estimated absolute scores for each immune cell type by CIBERSORT and PD1-TIL, PDL1-TIL, and PDL1-Tumor immunostaining in C-HCC and HCC-IS.
Figure Interpretation
The upper right corner shows the correlation between various immune cell types in C-HCC, and the lower left corner shows the correlation between various immune cell types in HCC-IS.
The figure legend is unclear, so I'm guessing based on the image:
The size of the bubble represents the correlation coefficient r
The color of the bubble represents the correlation coefficient r
No bubble is drawn when the p value is > 0.05
Application Scenarios
When performing correlation analysis between multiple genes (or immune cells, or samples), if the data comes from two different sources, separate graphs are usually required. However, they can be drawn on a single graph.
This is suitable for displaying correlation results with consistent horizontal and vertical coordinates, as the correlation matrix can be drawn as a triangle (the lower left and upper right columns are the same). If the horizontal and vertical coordinates are inconsistent, a rectangle should be drawn. For calculation and drawing methods, refer to FigureYa97correlation. If you want to display two groups simultaneously, refer to FigureYa144DiagHeatmap.
环境设置
使用国内镜像安装包
Environment Setup
Using a domestic mirror installation package
options("repos"= c(CRAN="https://mirrors.tuna.tsinghua.edu.cn/CRAN/"))
options(BioC_mirror="http://mirrors.ustc.edu.cn/bioc/")
加载包
Load package
library(ComplexHeatmap)
Sys.setenv(LANGUAGE = "en") #显示英文报错信息 #Display English error message
options(stringsAsFactors = FALSE) #禁止chr转成factor
输入文件的获得
如果你的数据已经整理成easy_input*P.csv和easy_input*R.csv的格式，就可以跳过这步，直接进入“输入文件”
相关性分析
这里借用FigureYa71ssGSEA输出的ssGSEA_output.csv，用来展示相关系数和p value的计算方法，生成所需的easy_input*P.csv和easy_input*R.csv。
ssGSEA_output.csv，免疫细胞矩阵，列是免疫细胞，行是样本。可以换成其他类型的数据，例如基因表达矩阵。
Obtaining Input Files
If your data is already organized into the formats of easy_input*P.csv and easy_input*R.csv, you can skip this step and go directly to "Input Files."
Correlation Analysis
Here, we use the ssGSEA_output.csv file from Figure Ya71 to demonstrate how to calculate the correlation coefficient and p-value, and to generate the required easy_input*P.csv and easy_input*R.csv files.
ssGSEA_output.csv is an immune cell matrix, with immune cells in the columns and samples in the rows. You can replace it with other data types, such as a gene expression matrix.
tcga_gsva <- read.csv("ssGSEA_output.csv", row.names = 1, check.names = F)
tcga_gsva[1:3,1:3]
#这里将计算每列之间的相关性 #This will calculate the correlation between each column.
#如果要计算行之间的相关性就运行下面这行转置（把行变成列，列变成行） #To calculate the correlation between rows, run the following transpose (transpose rows into columns and columns into rows).
#tcga_gsva <- t(tcga_gsva)

# 计算相关系数 Calculate the correlation coefficient
cor_r <- cor(tcga_gsva)
cor_r[1:3,1:3]
write.csv(cor_r, "easy_input_R.csv", quote = F)

# 计算p value # Calculate the p value
cor_p <- matrix(0, nrow = ncol(tcga_gsva), ncol = ncol(tcga_gsva))
rownames(cor_p) <- colnames(tcga_gsva)
colnames(cor_p) <- colnames(tcga_gsva)
for (i in 1:ncol(tcga_gsva)){
  for (j in 1:ncol(tcga_gsva)){
      p <- cor.test(tcga_gsva[,i],tcga_gsva[,j])
      cor_p[i,j] <- p$p.value
  }
}
write.csv(cor_p, "easy_input_P.csv", quote = F)
两组数据都按照这个方式运行，分别算出两组相关系数和pvalue，作为输入文件。
输入文件
这里我们直接用TCGA当中
KICH
以及
KIRC
内的免疫细胞之间相关分析的结果来进行绘图展示。
输入文件分别是两个癌症的相关系数
easy_input*_R.csv
和P值
easy_input*_P.csv
。
Both sets of data were run in this manner, and the correlation coefficients and p-values ​​were calculated for each set, which served as the input files.
Input Files
Here, we directly use the results of the correlation analysis between immune cells in the TCGA datasets
KICH
and
KIRC
to plot the results.
The input files are the correlation coefficients
easy_input*_R.csv
and the p-values ​​
easy_input*_P.csv
for the two cancers.
KICHR <- read.csv("easy_input1_R.csv", row.names = 1)
KICHR[1:3,1:3]
KICHP <- read.csv("easy_input1_P.csv", row.names = 1)
KICHP[1:3,1:3]
KIRCR <- read.csv("easy_input2_R.csv", row.names = 1)
KIRCP <- read.csv("easy_input2_P.csv", row.names = 1)
合并数据
由于要做对两个数据集进行一起做图，所以需要把两个数据集整合到一起。由于两个数据集都是经过相关算法计算的结果，所以变量顺序也一样，所以我们就不检查其顺序是否一样。如果是自己的数据记得使用
identical
检查一下列名和行名的顺序是否一样。
这里在相关图里面的右上半部分来展示
KICH
的相关系数，左下半部分来展示
KIRC
的相关系数。
Merging Data
Since we want to plot two datasets together, we need to merge them. Since both datasets are calculated using the correlation algorithm, the variable order is the same, so we won't check for consistency. If you use your own data, remember to use the
identical
command to check that the column and row names are in the same order.
The correlation coefficient for
KICH
is shown in the upper right half of the correlation graph, and the correlation coefficient for
KIRC
is shown in the lower left half.
# P>= 0.05时，把相关系数设为NA
datR[datP > 0.05] <- NA
开始画图
用
ComplexHeatmap
画图
开始画图
用
ComplexHeatmap
画图
p1
sessionInfo()