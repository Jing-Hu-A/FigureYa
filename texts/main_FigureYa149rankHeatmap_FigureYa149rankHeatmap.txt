FigureYa149rankHeatmap
FigureYa149rankHeatmap
小丫画图出品
2019-11-24
欢迎关注“小丫画图”公众号，同名知识星球等你加入
小丫微信: epigenomics E-mail:
figureya@126.com
作者：Hao
小丫编辑校验
需求描述
分类变量的热图。
出自
https://bmccancer.biomedcentral.com/articles/10.1186/s12885-019-5768-0
Fig. 1 Differential gene expression of 24 matrix metalloproteinases (MMPs) in 15 different cancer types. Fold change and p-values shown were obtained through comparison of
unmatched control tissue (N between 11 and 114) to tumor tissue
(N between 66 and 1097). Fold change was calculated as the median expression of a gene in tumor divided by the median gene expression in adjacent normal tissue.
图的解读
每行一个基因，每列一个癌症类型
颜色分为6档：5档变化倍数（红色上调，蓝色下调）和pvalue不显著（白色）
如果pvalue>0.05，无论变化倍数多大都是白色
白色和灰色时，字为黑色；蓝色和红色时，字为白色。
应用场景
展示某些基因差异表达结果的时候，经常是把连续性变量当作数值来直接进行热图绘制。也可以像例文那样，先设置成分类变量的，同时用数字来进一步注释。变成分类变量后，可能更清晰的看到趋势。
还可以用来转换和展示相关性或其他连续变量。
这里用complexheatmap画图，其实还可以用pheatmap画图，可参考FigureYa114ternaryCluster，按表达量分为3组（高/低/不变）来画图。
环境设置
使用国内镜像安装包
options("repos"= c(CRAN="https://mirrors.tuna.tsinghua.edu.cn/CRAN/"))
options(BioC_mirror="http://mirrors.ustc.edu.cn/bioc/")
加载包
library(ComplexHeatmap)
Sys.setenv(LANGUAGE = "en") #显示英文报错信息
options(stringsAsFactors = FALSE) #禁止chr转成factor
输入文件
easy_input_logFc.csv，差异表达分析当中的
logFC
值，还可以替换为相关分析的相关系数。
easy_input_PVal.csv，差异表达分析当中的
P
值。
genetype.csv，基因的分组，用于画最左侧annotation，非必须。
logfc <- read.csv("easy_input_logFc.csv", row.names = 1)
logfc[1:2,]
p.val <- read.csv("easy_input_PVal.csv", row.names = 1)
p.val[1:2,]
genetype <- read.csv("genetype.csv")
head(genetype)
#为确保热图基因的顺序和分组文件的顺序是一致的
#因此按照基因分组文件里的顺序，对logfc和p.val两个文件排序
logfcOrdered <- logfc[genetype$gene,]
p.valOrdered <- p.val[genetype$gene,]
连续变量转换为分类变量
分类规则：
先按logFC值分成
5类
；
如果
pvalue>0.05
，无论倍数多大都作为第6类。
开始画图
我们使用
ComplexHeatmap
绘图，分三步：
用转换好的
logfcCat
数据集定义热图的颜色；
在每个热图框中添加数字，由于黑色的数字在深颜色当中不清楚，所以会根据不同的不同的cutoff调整数字的颜色；
添加左侧分类注释；
画图。
1. 定义好每个分类变量的颜色
2. 自定义一个字体颜色根据cutoff变化的函数
热图颜色为白色和灰色时，字为黑色；蓝色和红色时，字为白色。
所以我们就定义了一个包含两个数据集的函数
cell_fun <- function(logfc, dataP, logfcCutoff = 1, PCutoff = 0.05, 
                     darkcol = "black", lightcol = "white", digit = 2, fontsize  = 6){
    function(j, i, x, y, width, height, fill){
        if(abs(logfc[i,j]) > logfcCutoff & dataP[i,j] < PCutoff){
            grid.text(round(logfc, digit)[i, j], x, y, 
                      gp = gpar(fontsize = fontsize, col  = lightcol))
        }else{
            grid.text(round(logfc, digit)[i, j], x, y, 
                      gp = gpar(fontsize = fontsize, col  = darkcol))
        }
    }
}
函数的参数包括
logfc: logfc的数据集
dataP: P值的数据集
logfcCutoff和PCutoff的cutoff值
darkcol和lightcol：浅色和深色的字体颜色
digit: 热图框当中显示数据的小数点位数
fontsize: 热图框内字体颜色的大小
3. 添加注释
热图的旁边会有一个对于基因的注释。我们需要对注释信息进行定义
4. 统一绘图
最后我们把所有的数据结合到一起来绘图即可
pdf("rankHeatmap.pdf", width = 8, height = 4)
Heatmap(matrix = logfcCat, 
        name = "logFC", #主要图例的标题
        rect_gp = gpar(col = "NA", lwd = 1), #不画边框，或者用col = "grey"画灰色边框
        col = col_cat, #热图颜色
        row_names_side = "left", 
        cell_fun = cell_fun(logfcOrdered, p.valOrdered), 
        row_names_gp = gpar(fontsize = 8), #基因名字号
        column_names_gp = gpar(fontsize = 8), #肿瘤类型字号
        column_names_rot = 45, #肿瘤类型呈45度
        left_annotation = row_an) #左侧基因分类，如果不画，就筛掉这个参数
dev.off()
sessionInfo()