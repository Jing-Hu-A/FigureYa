FigureYa164PCA3D
FigureYa164PCA3D
Date：2025-5-20
Author：Bin Wei
Reviewer：Ying Ge、Junyi Shen
需求描述Description of requirements
像文章里这样的3D PCA图，展示不同组sample的关系。3D PCA diagrams like the one in the article show the relationship between different groups of samples
Figure 1 Different immune phenotypes between glioma grades (A) Principal components analysis of immune-related genes between glioblastoma (GBM) and lower grade glioma (LGG).
Figure 2 An 8-gene local immune signature for patients with glioblastoma (GBM) (C) Distribution of samples based on the whole genome expression data. (D) High- and low-risk patients distributed on 2 sides based on the immune system process gene set.
出自From
https://n.neurology.org/content/86/24/2226
应用场景Application scenarios
场景一：PCA一般用作质控，对测序数据的batch effect有个整体的评价。Scenario 1: PCA is generally used for quality control to evaluate the batch effect of sequencing data
场景二：展示分组之间特定基因的差异。对比例文Figure 2 C和D，C用whole genome expression data，所有样本都混在一起，D用immune-related gene sets就可以看出 clearly divided patients into 2 sections, indicating their remarkable difference in immune phenotype. 类似的像例文Figure 1 A用immune-related gene set 做PCA，indicating distinct immune phenotypes among histologic grades。  Scenario 2: Demonstrate differences in specific genes between groups. Figure 2 C and D, C used whole genome expression data, all samples were mixed, and D was used with immune-related gene sets, clearly divided patients into 2 sections, indicating their remarkable difference in immune phenotype. Similar example Figure 1 A uses immune-related gene set as PCA, indicating distinct immune phenotypes among histologic grades.
环境设置Environment settings
使用国内镜像安装包Use the domestic mirror installation package
options("repos"= c(CRAN="https://mirrors.tuna.tsinghua.edu.cn/CRAN/"))
options(BioC_mirror="http://mirrors.ustc.edu.cn/bioc/")
加载包Load the package
library(rgl)

Sys.setenv(LANGUAGE = "en") #显示英文报错信息Displays the error message in English
options(stringsAsFactors = FALSE) #禁止chr转成factor   It is forbidden to convert CHR to factor
输入文件Enter the file
如果你自己的数据已经整理成easy_input*文件的格式，就直接跳到“PCA分析”。If your own data has been organized into a easy_input* file format, jump straight to "PCA analysis"
输入文件的下载Enter the download of the file
基因表达矩阵，CGGA.mRNA_array_301_gene_level.20191128.txt，每行一个基因，每列一个sample。从CGGA下载Gene expression matrix, CGGA.mRNA_array_301_gene_level.20191128.txt, one gene per row, one sample per column. Download from CGGA：
Expression Data (gene level)
，解压unpack；
分组信息，CGGA.mRNA_array_301_clinical.20191128.txt，至少包含CGGA_ID和Grade两列，这里用Grade为LGG和GBM分组。从CGGA下载Grouping information, CGGA.mRNA_array_301_clinical.20191128.txt, contains at least two columns, CGGA_ID and Grade, here Grade is used to group LGG and GBM. Download from CGGA：
Clinical Data
，解压unpack；
从MSigDB下载免疫相关基因，用这个方法还可以下载其他感兴趣通路的基因Downloading immune-related genes from MSigDB can also be used to download genes from other pathways of interest：
immune system process, M13664
基因集合gene collection，重命名为renamed to“IMMUNE_SYSTEM_PROCESS_M13664.txt”；
immune response, M19817
基因集合gene collection，重命名为renamed to“IMMUNE_RESPONSE_M19817.txt”。
读取基因表达矩阵Read the gene expression matrix
#exp_data <- read.table("CGGA.mRNA_array_301_gene_level.20191128.txt", header=T, row.names=1, sep="\t")
# 为方便传输，只保留小数点后1位For ease of transmission, only 1 decimal place is retained
#write.csv(round(exp_data,1), "easy_input_expr_ori.csv", quote = F)
exp_data <- read.csv("easy_input_expr_all.csv", row.names = 1)
exp_data[1:3,1:3]
读取分组信息Read the grouping information
用到两列Two columns are used：CGGA_ID和Grade
clinical_data <- read.table("CGGA.mRNA_array_301_clinical.20191128.txt", header=T, sep="\t")
clinical_data <- clinical_data[!is.na(clinical_data$Grade), ]
clinical_data[1,]
table(clinical_data$Grade)
# 获取LGG样本名称，Grade里的WHO II和WHO III定义为LGG   Obtain the LGG sample name, WHO II and WHO III in Grade are defined as LGG
lgg_sample <- as.character(subset(clinical_data, Grade %in% c("WHO II", "WHO III"))[, "CGGA_ID"])
lgg_sample <- lgg_sample[lgg_sample %in% colnames(exp_data)]
write.table(lgg_sample, "easy_input_group1.txt", quote = F, row.names = F)

# 获取GBM样本名称，Grade里的WHO IV定义为LGG   Obtain the GBM sample name, and the WHO IV in Grade is defined as LGG
gbm_sample <- as.character(subset(clinical_data, Grade %in% c("WHO IV"))[, "CGGA_ID"])
gbm_sample <- gbm_sample[gbm_sample %in% colnames(exp_data)]
write.table(gbm_sample, "easy_input_group2.txt", quote = F, row.names = F)
读取参与特定通路的基因Read genes involved in specific pathways
# 读取基因集合Read gene sets
immune_response <- as.character(read.table("IMMUNE_RESPONSE_M19817.txt", skip=2)[, 1])
immune_system_process <- as.character(read.table("IMMUNE_SYSTEM_PROCESS_M13664.txt", skip=2)[, 1])
immune_genes <- unique(c(immune_response, immune_system_process))
immune_genes <- immune_genes[immune_genes %in% rownames(exp_data)]

# 获取感兴趣的基因表达谱Obtain gene expression profiles of interest
immune_data <- exp_data[immune_genes, c(lgg_sample, gbm_sample)]
immune_data[1:5, 1:5]
# 保存到文件Save to file
write.csv(immune_data, "easy_input_expr.csv", quote = F)
PCA分析PCA analysis
# 读取基因表达矩阵Read the gene expression matrix
immune_data <- read.csv("easy_input_expr.csv", row.names = 1)
immune_data[1:3,1:3]
dim(immune_data)
# 做PCA
pca <- prcomp(t(immune_data))
开始画图Start drawing
# 两个分组的sample ID  The sample ID of the two groups
lgg_sample <- read.table("easy_input_group1.txt", header = T)$x
gbm_sample <- read.table("easy_input_group2.txt", header = T)$x

# 准备颜色Prepare the color
lgg_color <- rep("yellow", length(lgg_sample))
names(lgg_color) <- lgg_sample
gbm_color <- rep("red", length(gbm_sample))
names(gbm_color) <- gbm_sample
groups <- c(lgg_color, gbm_color)
运行下面这段，会跳出画图窗口，用鼠标拖拽到合适的角度、拉伸窗口到合适的大小后，保存图。Run the following paragraph, the drawing window will pop up, drag and drop the mouse to the appropriate angle, stretch the window to the appropriate size, and save the picture.
# 3d PCA图3d PCA diagram
plot3d(pca$x[,1:3], # 取前三个主成分Take the first three main components
       xlab="Comp.1", ylab="Comp.2", zlab="Comp.3", 
       col=groups, # 按groups填充颜色Fill the colors by groups
       type="s", # 画球Draw the ball，'p' for points, 's' for spheres, 'l' for lines, 'h' for line segments 
       size=1, #球的大小The size of the ball
       lwd=2, box=T)
# 保存(目前只能保存为png)Save (currently only saved as png)
#rgl.snapshot("PCA.png")
有时我们希望同一篇文章中的多个3D图形保持同一角度来展示，那就把角度保存下来，每次画图都加载这个角度。Sometimes we want multiple 3D figures in the same article to be displayed at the same angle, so save the angle and load it every time we draw.
#手动调好3D图形位置，获得角度Manually adjust the position of the 3D figure to get the angle
myMatrix <- par3d()
userMatrix <- myMatrix$userMatrix
windowRect <- myMatrix$windowRect
# 把角度保存到文件Save the angle to the file
#save(userMatrix, windowRect, file = "mypar3d.RData")

# 载入之前调好的角度Load the angle you adjusted earlier
(load("mypar3d.RData"))
head(userMatrix) # a 4 by 4 matrix describing user actions to display the scene.
head(windowRect) # integer. A vector of four values indicating the left, top, right and bottom of the displayed window (in pixels). Applies to the whole device.
par3d(userMatrix=userMatrix, windowRect=windowRect)
rglwidget()
# 保存(目前只能保存为png)Save (currently only saved as png)
#rgl.snapshot("PCA.png")
由于是3D图，需要在弹出的窗口自己调整角度，所以待调整完角度后再添加legend      Since it is a 3D drawing, you need to adjust the angle in the pop-up window, so add legend after adjusting the angle
也可以用Illustrator等软件手动添加图例，更灵活。也可以用Illustrator等软件手动添加图例，更灵活。You can also manually add legends with software such as Illustrator, which is more flexible. You can also manually add legends with software such as Illustrator, which is more flexible.
legend3d("topright", # legend的位置Legend's location
         legend = c("LGG (n=173)", "GBM (n=124)"), # 手写文字Handwritten text
         bty = "n", # 不带边框Without borders
         cex = 2, # 文字大小Text size
         pch = 16, # 圆形rotundity
         col = c("yellow", "red")) # 颜色跟图中一致The color is the same as in the picture
# 保存(目前只能保存为png)Save (currently only saved as png)
rgl.snapshot("PCA.png")
Session Info
sessionInfo()