FigureYa143survCor
FigureYa143survCor
小丫画图出品
2019-10-27
欢迎关注“小丫画图”公众号，同名知识星球等你加入
小丫微信: epigenomics E-mail:
figureya@126.com
作者：大鱼海棠
单位：Research Center of Biostatistics and Computational Pharmacy, China Pharmaceutical University
小丫编辑校验
需求描述
绘制较复杂的相关性图，包括计算每个表达值下的logrank score；以肠癌MSS和MSI样本为例。
出自
https://www.jci.org/articles/view/127046
Figure 1. Comparison of TME stratification based on CD8A and CD274 gene expression between TCGA melanoma and CRC. Scatter plots of log2-transformed CD8A and CD274
gene expression
values are shown (A and C) for melanoma (n = 459) and CRC (n = 599), respectively. A linear regression line is plotted with the
gray shaded region showing the 95% confidence interval
. Pearson’s correlation coefficient r and P values are given at the bottom.
MSI (black triangles) and MSS (gray circles) statuses
are labeled for CRC samples.
Median values of CD8A and CD274 expression are indicated with dashed gray lines
. log-rank statistics were applied to identify the optimal cut-off for transforming the continuous variable of gene expression into categorical high- and low-expression groups in a survfit model. The test score at each candidate cut-off across the log-transformed gene expression values was plotted.
The highest test score (indicated with a blue arrow) was applied for best separating patients into 4 different risk groups (using solid blue lines; named groups I to IV)
. To compare risk groups between melanoma and CRC, we also applied a secondary peak of test scores (red arrow with an asterisk, which revealed a reverse pattern of survival in CRC as shown in Supplemental Figure 2) for CD274 stratification (indicated with a solid red line instead of a blue line; named groups I, II, III* and IV*). Each stratified risk group is labeled with its population fraction in percentages.
Statistics
. CD8A and PD-L1 gene expression were chosen for investigation from the 20 correlated genes (Bedognetti et al.; ref. 12). We used
log-rank statistics
to identify the
optimal expression cut-off
for each gene with regard to the associated hazard of death or relapse events in a survfit model (63), using the cutp function of the
R package survMisc
(version 0.5.5;
https://CRAN.R-project.org/package=survMisc
). The cut-off with the
highest log-rank test score was selected for best separating patients into high- and low-expression groups with different risks
. Upon observing a bimodal distribution of marginal log-rank statistics for CRC, but not melanoma, CD274 expression value at a secondary mode was used to identify a second set of high-risk subjects.
应用场景
用log-rank statistics找最佳分组cut-off。
用复杂相关性图同时展示基因表达相关性、MSI/MSS状态、最佳cut-off、分组等信息。
如果只想计算并展示相关性，画出类似的图，可参考FigureYa92immune_gene。
环境设置
使用国内镜像安装包
options("repos"= c(CRAN="https://mirrors.tuna.tsinghua.edu.cn/CRAN/"))
options(BioC_mirror="http://mirrors.ustc.edu.cn/bioc/")
加载包
library(TCGAbiolinks) # 下载数据
library(survival) # 计算survdiff
library(survMisc) # 计算cutoff
library(shape) # 绘制稍微美观的箭头

Sys.setenv(LANGUAGE = "en") #显示英文报错信息
options(stringsAsFactors = FALSE) #禁止chr转成factor
输入文件
easy_input_expr.txt，基因表达矩阵。第一列是样本ID，二、三列分别是CD274和CD8A的TPM。每行一个样本。TPM的获得可参考FigureYa23count2TPM或FigureYa56immune_inflitration。或者直接用FigureYa34count2FPKM下载FPKM值。
easy_input_survival.txt，生存信息，跟表达矩阵的样本ID对应。
msi_results.rda，下载的MSI信息保存在这里，以便重复使用。
# 表达矩阵
expr <- read.table("easy_input_expr.txt",sep = "\t",check.names = F,stringsAsFactors = F,header = T,row.names = 1)
head(expr)
# 生存信息
surv <- read.table("easy_input_survival.txt",sep = "\t",check.names = F,stringsAsFactors = F,header = T,row.names = 1)
head(surv)
下载MSI信息：
下载过程完成后存储为当前文件夹下的msi_results.rda文件，便于重复使用。
# COAD结肠癌
msiquery1 <- GDCquery(project = "TCGA-COAD",
                      data.category = "Other",
                      legacy = TRUE,
                      access = "open",
                      data.type = "Auxiliary test")
GDCdownload(msiquery1)
coad_msi_results <- GDCprepare_clinic(msiquery1, "msi")
coad_msi_results <- coad_msi_results[,c(1,3)]
rownames(coad_msi_results) <- paste0("COAD-",substr(coad_msi_results$bcr_patient_barcode,9,12),"-01A") #zhi 修改样本名匹配表达谱和临床数据
colnames(coad_msi_results) <- c("sample", "MSI")

# READ直肠癌
msiquery2 <- GDCquery(project = "TCGA-READ",
                      data.category = "Other",
                      legacy = TRUE,
                      access = "open",
                      data.type = "Auxiliary test")
GDCdownload(msiquery2)
read_msi_results <- GDCprepare_clinic(msiquery2, "msi")
read_msi_results <- read_msi_results[,c(1,3)]
rownames(read_msi_results) <- paste0("READ-",substr(read_msi_results$bcr_patient_barcode,9,12),"-01A") # 修改样本名匹配表达谱和临床数据
colnames(read_msi_results) <- c("sample", "MSI")

# 合并MSI信息
msi_results <- rbind.data.frame(coad_msi_results, read_msi_results)

# 存储MSI信息
save(msi_results,file = "msi_results.rda")
读取MSI信息：
(load("msi_results.rda"))
table(msi_results$MSI)
mss.sam <- rownames(msi_results[which(msi_results$MSI %in% c("MSS","MSI-L")),])
msi.sam <- rownames(msi_results[which(msi_results$MSI %in% c("MSI-H")),])
挑选表达矩阵、生存信息、包含明确MSI信息的共有样本：
com_sam <- intersect(intersect(rownames(expr),rownames(surv)),c(mss.sam, msi.sam))
expr <- round(log2(expr[com_sam,] + 1),2) # 表达谱对数转化
surv <- surv[com_sam,]
计算logrank score和相关性
#-------------------#
# 计算logrank score #
#-------------------#

exprsurv <- cbind.data.frame(surv,expr) # 新建包含表达和生存的数据框
exprsurv$sampleID <- rownames(exprsurv) # 生成样名

# CD274
cox.CD274 <- coxph(Surv(OS.time, OS) ~ CD274, data=exprsurv) # cox回归
logrank.CD274 <- as.data.frame(print(cutp(cox.CD274))) # cut连续变量产生logrank score
colnames(logrank.CD274)[1] <- "CD274"
logrank.CD274 <- logrank.CD274[order(logrank.CD274$CD274),]
peak.CD274 <- logrank.CD274[which.min(logrank.CD274$CD274.p),1] # 得到p值最小(logrank score 峰值)下对应的表达值
peak.CD274.score <- logrank.CD274[which.min(logrank.CD274$CD274.p),2] # 找到logrank score 峰值

# CD8A
cox.CD8A <- coxph(Surv(OS.time, OS) ~ CD8A, data=exprsurv)
logrank.CD8A <- as.data.frame(print(cutp(cox.CD8A)))
colnames(logrank.CD8A)[1] <- "CD8A"
logrank.CD8A <- logrank.CD8A[order(logrank.CD8A$CD8A),]
peak.CD8A <- logrank.CD8A[which.min(logrank.CD8A$CD8A.p),1]
peak.CD8A.score <- logrank.CD8A[which.min(logrank.CD8A$CD8A.p),2]

# 计算各区域的样本 (注意边际上的样本重复问题)
lefttop <- expr[which(expr$CD274 < peak.CD274 & expr$CD8A > peak.CD8A),]
leftbottom <- expr[which(expr$CD274 <= peak.CD274 & expr$CD8A <= peak.CD8A),]
righttop <- expr[which(expr$CD274 >= peak.CD274 & expr$CD8A >= peak.CD8A),]
rightbottom <- expr[which(expr$CD274 > peak.CD274 & expr$CD8A < peak.CD8A),]

lefttop.pct <- paste0("III (",round(nrow(lefttop)/nrow(expr),2)*100,"%)")
leftbottom.pct <- paste0("I (",round(nrow(leftbottom)/nrow(expr),2)*100,"%)")
righttop.pct <- paste0("IV (",round(nrow(righttop)/nrow(expr),2)*100,"%)")
rightbottom.pct <- paste0("II (",round(nrow(rightbottom)/nrow(expr),2)*100,"%)")

#------------#
# 计算相关性 #
#------------#

cor <- cor.test(expr$CD274,expr$CD8A,method = "pearson") # 皮尔森相关性检验
r <- round(cor$estimate,2)
p <- ifelse(cor$p.value < 0.001," < 0.001", paste0(" = ",round(cor$p.value))) # p值显示为文本

#------------------------#
# 计算线性回归以及置信域 #
#------------------------#
reg <- lm(CD8A~CD274,data=expr[order(expr$CD274),]) # 注意要按照x轴排序
ci <- as.data.frame(predict(reg, newdata = expr[order(expr$CD274),], interval = 'confidence')) # 计算置信域
开始画图
# 设置颜色
blue <- "#4F81BD"
red <- "#E53435"
lblue <- "#5bc0eb"
dblue <- "#1d00ff"
pink <- "#FF7FBF"

# 计算边界
ylim <- range(expr$CD8A) # 计算y轴边界
xlim <- range(expr$CD274) # 计算x轴边界

# 保存pdf图像
pdf("complex correlation with logrank score.pdf",width = 6,height = 6)

# 设置画面布局，相同数字代表同一区块，数字越多代表该区块所占面积越大
layout(matrix(c(1,1,1,1,2,
                3,3,3,3,4,
                3,3,3,3,4,
                3,3,3,3,4,
                3,3,3,3,4),
              byrow = T,nrow = 5))

#--------------------------------------------#
# 画布区域1：添加x轴相关的logrank test score #
#--------------------------------------------#

par(bty="n", mgp = c(2,0.5,0), mar = c(0.6,4.1,2.1,0),tcl=-.25,xpd = T) # 注意mar参数要和其他区域匹配，分别显示图像为下，左，上，右预留的位置；xpd允许箭头超出图像范围
plot(NULL, NULL,
     xlim = xlim,ylim = c(0,max(logrank.CD274$CD274.U) + 5), # y轴额外空余一些距离放箭头
     xaxt = "n",yaxt = "n",ann=FALSE) # 不显示坐标轴

# 这里不能使用barplot原因在于x轴的间隔并不固定，其实barplot本身本身是rect函数的一种wrapper，所以这里用rect函数绘制条形图
rect(xleft=logrank.CD274[order(logrank.CD274$CD274),"CD274"]-0.01, 
     ybottom=0, 
     xright=logrank.CD274[order(logrank.CD274$CD274),"CD274"]+0.01, 
     ytop=logrank.CD274[order(logrank.CD274$CD274),"CD274.U"],col = "black")

# 在peak处添加箭头
Arrows(peak.CD274,peak.CD274.score + 5,
       peak.CD274,peak.CD274.score + 3,
       arr.length = 0.2,
       lwd = 2,col = blue,arr.type = "triangle")

#------------------------#
# 画布区域2：填充空白画布#
#------------------------#

par(bty="n", mgp = c(2,0.5,0), mar = c(4.1,4.1,0,0),tcl=-.25)
plot(0,0,col = "white",xaxt = "n",yaxt = "n",xlab = "",ylab = "")

#----------------------#
# 画布区域3：相关性主图#
#----------------------#

par(bty="o", mgp = c(2,0.5,0), mar = c(4.1,4.1,0,0),tcl = -.25,font.axis = 2,las = 1) # 注意坐标轴刻度均水平
par(xpd=F)

# 画MSS
plot(expr[mss.sam,"CD274"], expr[mss.sam,"CD8A"],ylim = ylim,xlim = xlim,
     xlab = expression(italic(CD274)~"(PD-L1) Gene Expression"), # 注意斜体
     ylab = expression(italic(CD8A)~" Gene Expression"),main = "", # 注意斜体
     cex.lab = 1.8, # 坐标轴文字大小
     cex.axis = 1.4, # 坐标轴刻度大小
     col="grey40",
     cex = 1.2,
     type = "p",pch = 19) # 圆形为MSS

# 添加MSI
points(expr[msi.sam,"CD274"], expr[msi.sam,"CD8A"],
       ylim = ylim,xlim = xlim,
       col="black",
       cex = 2, # 三角形稍大
       pch = 17) # 三角形为MSI

# 添加中位数
abline(h = median(expr$CD8A),lty = 2,col = "grey60",lwd = 2)
abline(v = median(expr$CD274),lty = 2,col = "grey60",lwd = 2)

# 添加logrank peak对应的表达值
abline(v = peak.CD274,lty = 2,col = blue,lwd = 2)
abline(h = peak.CD8A,lty = 2,col = blue,lwd = 2)

# 添加相关性
# 添加回归线 (由于例文并未布满整个画布，所以这里不使用abline)
lines(x = xlim,y = xlim*reg$coefficients[2] + reg$coefficients[1], lwd = 2)

# 添加置信带
polygon(round(c(sort(expr$CD274),rev(sort(expr$CD274))),2),
        round(c(ci$lwr,rev(ci$upr)),2),
        col=ggplot2::alpha("grey70",0.6),
        border=NA)

# 添加相关性文本
text(2,0,adj = 0,bquote(~italic(r)~" = "~.(r)~", "~italic(P)~.(p)),cex = 1.6) # 注意斜体

# 添加样本百分比
text(0.5,6.5,bquote(bold(.(lefttop.pct))),cex = 1.6,col = dblue)
text(4,6.5,bquote(bold(.(righttop.pct))),cex = 1.6,col = red)
text(0.5,0.5,bquote(bold(.(leftbottom.pct))),cex = 1.6,col = lblue)
text(4,0.5,bquote(bold(.(rightbottom.pct))),cex = 1.6,col = pink)

# 添加图例
# 确定图片边界
xmin <- par("usr")[1]
xmax <- par("usr")[2]
ymin <- par("usr")[3]
ymax <- par("usr")[4]

# 确定图例大小
lgd <- legend(x = mean(c(xmin,xmax)), y =  mean(c(ymin,ymax)), 
              legend = c("MSI","MSS"), 
              col = c("black","grey40"),
              pch = c(17,19),
              cex = 1.5, 
              border = NA, 
              title = expression(bold("MSI Status")),
              y.intersp = 1, x.intersp = 0.8,
              bty = "o",
              plot = F)

# 定位图例悬浮在右下角（不同于bottomright）
legend(x = xmax - lgd$rect$w - 0.1, y =  ymin + lgd$rect$h + 0.1,
       legend = c("MSI","MSS"), 
       col = c("black","grey40"),
       pch = c(17,19),
       cex = 1.5, 
       border = NA, 
       title = expression(bold("MSI Status")),
       y.intersp = 1, x.intersp = 0.8,
       bty = "o",
       plot = T)
       
#--------------------------------------------#
# 画布区域4：添加y轴相关的logrank test score #
#--------------------------------------------#

par(bty="n", mgp = c(2,0.5,0), mar = c(4.1,0.6,0,2.1),tcl=-.25,xpd = T)
plot(NULL, NULL,
     xlim = c(0,max(logrank.CD8A$CD8A.U) + 5),ylim = ylim,
     xaxt = "n",yaxt = "n",ann=FALSE)

rect(xleft=0, 
     ybottom=logrank.CD8A[order(logrank.CD8A$CD8A),"CD8A"]-0.01, 
     xright=logrank.CD8A[order(logrank.CD8A$CD8A),"CD8A.U"], 
     ytop=logrank.CD8A[order(logrank.CD8A$CD8A),"CD8A"]+0.01,col = "black")

Arrows(peak.CD8A.score + 5,peak.CD8A,
       peak.CD8A.score + 3,peak.CD8A,
       arr.length = 0.2,
       lwd = 2,col = blue,arr.type = "triangle")

# 关闭图形句柄
invisible(dev.off())
sessionInfo()