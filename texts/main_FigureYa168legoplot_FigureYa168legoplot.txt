FigureYa168legoplot
FigureYa168legoplot
Date：2025-5-20
Author：Bin Wei
Reviewer：Ying Ge、Junyi Shen
需求描述Description of requirements
从基因组中获取突变位点context序列，用乐高图展示突变模式。 顺便画个pie。The context sequence of mutation sites is obtained from the genome, and the mutation pattern is shown with Lego graphics. By the way, draw a pie.
出自From
https://onlinelibrary.wiley.com/doi/full/10.1111/cas.14113
Figure 2 Mutational signatures extracted from the aggregated NSCLC dataset. A, Lego plot representation of mutation patterns in 113 NSCLC samples. Single-nucleotide substitutions are divided into 6 categories with 16 surrounding flanking bases. The pie chart in the upper left shows the proportion of 6 categories of mutation patterns.
图的解读Interpretation of the figure
每种颜色内部是4X4结构，刚好对应TCGA四种碱基。因此，比通常所用的柱形图（例文Figure 2 B）更适合展示四种碱基的关系。Inside each color is a 4X4 structure, which corresponds to exactly the four bases of TCGA. Therefore, it is more suitable than the usual column diagram (Figure 2 B) to show the relationship between the four bases.
至于6种颜色，你也可以画成1X6结构，作者画成2X3结构会更节省空间。As for the 6 colors, you can also draw in a 1X6 structure, and the author will draw a 2X3 structure to save space
柱子的高度代表第3种特征（这里是计数），除了柱子的形式以外，你也可以尝试换成圆点，用圆点大小来代替柱子的高度。或者把柱子换成热图，用颜色深浅代替柱子的高度。The height of the column represents the 3rd feature (counting here), and in addition to the column form, you can also try to replace the height of the column with the dot size. Or swap out the column for a heat map, replacing the height of the column with shades of color.
应用场景Application scenarios
同时展示3种特征。尤其适合其中一种特征具有m X n的特性的情况，例如文中的4种碱基 X 4种碱基。Three characteristics are displayed at the same time. It is especially suitable for the case where one of the features has the characteristics of m X n, such as 4 bases X 4 bases in the paper.
环境设置Environment settings
if (!requireNamespace("BiocManager", quietly = TRUE))
  install.packages("BiocManager")
if (!("BSgenome.Hsapiens.UCSC.hg19" %in% rownames(installed.packages()))) {
  BiocManager::install("BSgenome.Hsapiens.UCSC.hg19")
}
if (!("VariantAnnotation" %in% rownames(installed.packages()))) {
  BiocManager::install("VariantAnnotation")
}
if (!("rgl" %in% rownames(installed.packages()))) {
  install.packages("rgl")
}

Sys.setenv(LANGUAGE = "en") #显示英文报错信息Displays the error message in English
options(stringsAsFactors = FALSE) #禁止chr转成factor     Prohibiting CHR from converting to factor
加载自定义函数Load custom functions
source("functions.R")
输入文件Enter the file
easy_input.txt，突变数据，来自文章附件Mutation data, from the attachment to the article cas14113-sup-0002-tables1.xlsx。
不仅限于突变数据，如果你的数据已经整理成very_easy_input.csv格式，就跳过这步，直接进入“开始画图”Not limited to mutant data, if your data has been organized into very_easy_input.csv format, skip this step and go straight to "Start Drawing."。
data <- read.delim("easy_input.txt", 
                   header=T, 
                   sep="\t", 
                   as.is=T)
head(data)
参数设置Parameter settings
# 输出的文件名前缀，即以什么开头The output file is a prefix, i.e. what it starts withThe output file is a prefix, i.e. what it starts with
# 这里输出的文件名以test开头The output file name here starts with test
outprefix <- "test"
从基因组中获取突变位点Obtain mutation sites from the genome  context
data <- data[data$Variant_Type=="SNP", ]
data <- data[data$Chromosome %in% (c(1:22, "X", "Y", "M")), ]

# 获取突变形式Get the mutant form
mut_type_list <- apply(data, 
                       1, 
                       get.mutationtype, ref="Reference_Allele", alt="Tumor_Seq_Allele2")
mut_type <- as.character(sapply(mut_type_list, function(x) x[[1]]))
mut_reverse <- as.character(sapply(mut_type_list, function(x) x[[2]]))
data$mut_type <- mut_type
data$mut_reverse <- mut_reverse

# 获取突变context  Get the mutation context
# 注：由于该步运行较慢，因此直接使用保存好的data.RData文件中的对象即可Note: Since this step runs slowly, the saved data is used directly. RData file
#mut_context <- apply(data, 
#                     1, 
#                     get.mutationcontext, genome=Hsapiens, chrom="Chromosome", start="Start_position", reverse="mut_reverse")
#data$mut_context <- mut_context

# 保存到文件Save to file
#write.csv(data[,c(13,15)], "very_easy_input.csv", quote = F, row.names = F)
开始画图Start drawing
画lego图Draw a LEGO picture
lego图参考了barplot3d包的源码，在其基础上进行了修改，这个R包链接为The LEGO diagram refers to the source code of the barplot3d package and modifies it on its basis, and this R package is linked to:
https://cran.r-project.org/web/packages/barplot3d/vignettes/barplot3d.html
very_easy_input.csv，包含两列，第一列mut_type对应图中的6种颜色，第二列mut_context对应每种颜色中的16个柱子，柱子的高度代表数量。套用自己的数据即可。It contains two columns, the first column mut_type corresponding to the 6 colors in the diagram, and the second column mut_context corresponding to the 16 columns in each color, and the height of the columns represents the number. Just apply your own data.
data <- read.csv("very_easy_input.csv")
head(data)
table(data$mut_type)
table(data$mut_context)
# 注：复现图的配色以及顺序和原文不太一样。原文的饼图和lego图顺序不一致，看起来有点奇怪。Note: The color scheme and order of the reproduction diagram are different from the original text. The original pie chart and the LEGO chart are out of order, which looks a bit strange.
palettecolors <- c("#805D3F", "#72549A", "#5EAFB2", "#3F4F9D", "#F2EC3C", "#74B655") #颜色必须是6个
mut_types <- c("C>T", "C>A", "C>G", "T>G", "T>C", "T>A")
contexts <- c("T_T", "C_T", "A_T", "G_T", "T_C", "C_C", "A_C", "G_C",
         "T_A", "C_A", "A_A", "G_A", "T_G", "C_G", "A_G", "G_G")
typeorder <- c()
for(type in mut_types){
    typeorder <- c(typeorder, paste(type, contexts, sep="."))
}

# 计数count
mut_data <- table(paste0(as.character(data$mut_type), ".", as.character(data$mut_context)))
mut_data <- mut_data[typeorder]

# 运行下面这段，会跳出画图窗口，用鼠标拖拽到合适的角度、拉伸窗口到合适的大小后，保存图。Run the following paragraph, the drawing window will pop up, drag and drop the mouse to the appropriate angle, stretch the window to the appropriate size, and save the picture.
legoplot.3d(mut_data, 
            scalez=0.015, 
            zlab="Mutations", 
            palettecolors=palettecolors)

# 可以在弹出窗口手动调整图形方向，然后运行以下命令保存为pdf文件You can manually adjust the direction of the drawing in the pop-up window, and then run the following command to save it as a pdf file
#rgl.postscript(paste0(outprefix, "_legoplot.pdf"), 
#               fmt="pdf")
有时我们希望同一篇文章中的多个3D图形保持同一角度来展示，那就把角度保存下来，每次画图都加载这个角度。Sometimes we want multiple 3D figures in the same article to be displayed at the same angle, so save the angle and load it every time we draw.
#把手动调好3D图形位置、角度保存到文件Manually adjust the position and angle of the 3D figure and save it to the file
myMatrix <- par3d()
userMatrix <- myMatrix$userMatrix
windowRect <- myMatrix$windowRect
# 把角度保存到文件Save the angle to the file
save(userMatrix, windowRect, file = "par3d.RData")
载入之前调好的角度画图Load the drawing at the angle you adjusted earlier
(load("par3d.RData"))
par3d(userMatrix=userMatrix,
      windowRect=windowRect)

# 保存到pdf文件Save to PDF file
#rgl.postscript(paste0(outprefix, "_legoplot.pdf"), 
#               fmt="pdf")
画饼图Draw a pie chart
pie_data <- round(table(as.character(data$mut_type)) * 100 / length(data$mut_type), digits=2)
pie_data <- pie_data[mut_types]
label <- paste(names(pie_data), paste0(pie_data,"%"))

pdf(paste0(outprefix, "_pieplot.pdf"))
pie(pie_data, 
    label, 
    col=palettecolors)
dev.off()
后期处理Post-processing
输出的PDF文件可以使用AI打开，拼接The output PDF file can be opened and spliced using AI
Session Info
sessionInfo()