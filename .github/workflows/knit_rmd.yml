name: Knit all Rmd Files

on:
  workflow_dispatch:

jobs:
  test-render:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: 1. Check out repository
        uses: actions/checkout@v4

      - name: 2. Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgfortran5 liblapack-dev libblas-dev \
            libpng-dev libjpeg-dev librsvg2-dev libcairo2-dev \
            libxml2-dev libcurl4-openssl-dev libssl-dev \
            libfontconfig1-dev libharfbuzz-dev libfribidi-dev \
            libfreetype6-dev libtiff5-dev

      - name: 3. Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: 'latest'
      
      - name: 4. Set up Pandoc
        uses: r-lib/actions/setup-pandoc@v2

      - name: 5. Install core R dependencies
        run: Rscript -e 'install.packages(c("rmarkdown", "knitr"))'

      - name: 6. Find and Render all Rmd files (quiet)
        run: |
          set -e
          echo "RMD Render Summary (All Files)" > summary.txt
          echo "======================================" >> summary.txt
          echo "" >> summary.txt

          find . -type f -name "*.Rmd" | while read rmd_file; do
            echo "========== START: $rmd_file =========="
            
            # Get directory of the Rmd file
            rmd_dir=$(dirname "$rmd_file")
            
            # Install dependencies if install_dependencies.R exists
            if [ -f "$rmd_dir/install_dependencies.R" ]; then
              echo "Installing dependencies for $rmd_file..."
              cd "$rmd_dir"
              if ! Rscript install_dependencies.R > install.log 2>&1; then
                echo "WARNING: Failed to install some dependencies for $rmd_file"
                tail -n 10 install.log
              fi
              cd - > /dev/null
            fi
            
            # Check for common missing data files before rendering
            missing_files=""
            if grep -q "easy_input" "$rmd_file" 2>/dev/null; then
              if [ ! -f "$rmd_dir/easy_input.csv" ] && [ ! -f "$rmd_dir/easy_input.txt" ] && [ ! -f "$rmd_dir/easy_input_expr.txt" ]; then
                missing_files="$missing_files easy_input files"
              fi
            fi
            
            if [ -n "$missing_files" ]; then
              echo "[SKIPPED] - $rmd_file (Missing data files:$missing_files)" | tee -a summary.txt
            else
              # Render the Rmd file
              if Rscript -e "rmarkdown::render('$rmd_file', quiet=TRUE)" > rmd_render.log 2>&1; then
                echo "[SUCCESS] - $rmd_file" | tee -a summary.txt
              else
                echo "[FAILED] - $rmd_file" | tee -a summary.txt
                tail -n 20 rmd_render.log  # 显示最后20行错误日志，便于定位失败原因
              fi
            fi
            echo "=========== END: $rmd_file ==========="
            echo ""
          done

      - name: 7. Upload Render Summary
        uses: actions/upload-artifact@v4
        with:
          name: render-summary-report-all
          path: summary.txt

      - name: 8. Commit and Push Rendered Files
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add .
          if ! git diff --staged --quiet; then
            git commit -m "docs: Auto-render Rmd output files by GitHub Actions"
            git push
          else
            echo "No changes to commit."
