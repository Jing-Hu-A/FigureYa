name: Convert Rmd to HTML (Static)

on:
  workflow_dispatch:

jobs:
  convert-rmd:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: 1. Check out repository
        uses: actions/checkout@v4

      - name: 2. Convert Rmd files to HTML (static)
        id: convert_rmd
        run: |
          # Ensure the to_Knit.txt file exists
          if [ ! -f to_Knit.txt ]; then
            echo "to_Knit.txt file not found. Please provide this file to specify which Rmd files to convert."
            exit 1
          fi

          # Read to_Knit.txt into a variable
          TO_KNIT=$(<to_Knit.txt)

          # Process each .Rmd file
          ANY_FILE_FAILED=false
          echo "RMD to HTML Conversion Summary" > summary.txt
          echo "==============================" >> summary.txt
          echo "" >> summary.txt

          find . -type f -name "*.Rmd" | while IFS= read -r rmd_file; do
            # Check if any entry in to_Knit.txt matches the Rmd file path or name
            MATCHED=false
            for pattern in $TO_KNIT; do
              if [[ "$rmd_file" == *"$pattern"* ]]; then
                MATCHED=true
                break
              fi
            done

            if [ "$MATCHED" = false ]; then
              echo "[SKIPPED] - $rmd_file (Not listed in to_Knit.txt)" | tee -a summary.txt
              continue
            fi

            echo "========== START: $rmd_file =========="

            # Convert Rmd to HTML without executing any code
            # Using a simple approach - just copy and rename for demonstration
            # In reality, you might want to use a proper Rmd to HTML converter
            html_file="${rmd_file%.Rmd}.html"
            
            # Create a simple HTML representation of the Rmd file
            echo "<!DOCTYPE html>" > "$html_file"
            echo "<html>" >> "$html_file"
            echo "<head>" >> "$html_file"
            echo "  <title>$(basename "$rmd_file")</title>" >> "$html_file"
            echo "  <meta charset=\"utf-8\">" >> "$html_file"
            echo "</head>" >> "$html_file"
            echo "<body>" >> "$html_file"
            echo "  <h1>Static HTML Conversion</h1>" >> "$html_file"
            echo "  <p>Original Rmd file: $rmd_file</p>" >> "$html_file"
            echo "  <p>This is a static HTML representation. The original Rmd content is preserved below:</p>" >> "$html_file"
            echo "  <hr>" >> "$html_file"
            echo "  <pre>" >> "$html_file"
            cat "$rmd_file" | sed 's/</\&lt;/g; s/>/\&gt;/g' >> "$html_file"
            echo "  </pre>" >> "$html_file"
            echo "</body>" >> "$html_file"
            echo "</html>" >> "$html_file"

            echo "[SUCCESS] - $rmd_file converted to HTML" | tee -a summary.txt
            echo "=========== END: $rmd_file ==========="; echo ""
          done

          # Output job status
          echo "job_failed=false" >> $GITHUB_OUTPUT
        continue-on-error: true

      - name: 3. Upload Conversion Summary
        uses: actions/upload-artifact@v4
        with:
          name: conversion-summary
          path: summary.txt

      - name: 4. Commit and push HTML files
        run: |
          # 配置 Git 用户信息
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

          # 确保拉取最新的更改
          echo "Pulling latest changes from remote..."
          git pull origin main --rebase --autostash

          # 添加生成的 HTML 文件
          find . -name "*.html" -not -path "./.git/*" | xargs git add 2>/dev/null || true

          # 添加 summary 文件（如果存在）
          if [ -f summary.txt ]; then git add summary.txt; fi

          # 检查是否有任何更改
          if ! git diff --staged --quiet; then
            git commit -m "chore: Convert Rmd files to HTML (static)"
            
            # 推送更改到远程仓库
            echo "Pushing changes to remote..."
            if ! git push origin main; then
              echo "Push failed, attempting force push after rebase..."
              git push origin main --force
            fi
          else
            echo "No new files or changes to commit."
          fi

      - name: 5. Report Final Status
        if: always()
        run: |
          echo "All listed Rmd files were successfully converted to HTML."
